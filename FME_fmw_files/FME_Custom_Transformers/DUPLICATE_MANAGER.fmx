#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN DUPLICATE_MANAGER,1,"Federal Geo Platform",0205f004-2458-4298-aaa7-4f92889525c8,"Linked by Default",No,NO_PARALLELISM,,No,18586,YES,No,35
# 
# TRANSFORMER_END
#!   ATTR_TYPE_ENCODING="SDF"
#!   BLOCKED_LOOPING="No"
#!   CATEGORY="Federal Geo Platform"
#!   DESCRIPTION=""
#!   DOC_EXTENTS="8829.32 2593.78"
#!   DOC_TOP_LEFT="-5628.43 -1296.89"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="18586"
#!   FME_DOCUMENT_GUID="0205f004-2458-4298-aaa7-4f92889525c8"
#!   FME_DOCUMENT_PRIORGUID="905634d7-991d-4f39-8e3c-f7e7aa9010f3,298bc6ef-2617-46eb-83dd-9ee00712c85b,24379901-e956-4993-bb34-72f3ca0f04a0,cfff4a7f-c779-4d8e-864a-f8357f30139d"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_SERVER_SERVICES=""
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   FMX_INSERT_MODE="Linked by Default"
#!   HISTORY=""
#!   ITERATION_COUNT_ATTR=""
#!   LAST_SAVE_BUILD="FME(R) 2018.1.1.2 (20190121 - Build 18586 - WIN32)"
#!   LAST_SAVE_DATE="2019-10-22T09:34:33"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOOP_ITERATIONS=""
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="35"
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   TITLE="DUPLICATE_MANAGER"
#!   USAGE=""
#!   USE_MARKDOWN="NO"
#!   VIEW_POSITION="-1803.14 1484.39"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   XFORM_DEPRECATED="No"
#!   ZOOM_SCALE="100"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="23"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;This section removes list duplicates from projection formats.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-2315.3494776379484 -688.51460127851942"
#!   TOP_LEFT="-2315.3494776379484 -688.51460127851942"
#!   BOTTOM_RIGHT="-1565.3494776379484 -738.51460127851942"
#!   BOUNDING_RECT="-2315.3494776379484 -688.51460127851942 750 50"
#!   ORDER="500000000000877"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! <COMMENT
#!   IDENTIFIER="24"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Removes all list attribute duplicates&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-552.19055719286553 9.2514346774946716"
#!   TOP_LEFT="-552.19055719286553 9.2514346774946716"
#!   BOTTOM_RIGHT="-70.923863935136069 10.251434677494672"
#!   BOUNDING_RECT="-552.19055719286553 9.2514346774946716 481.26669325772946 -1"
#!   ORDER="500000000000879"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="2"
#! />
#! <COMMENT
#!   IDENTIFIER="25"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;This section removes list duplicates from update formats&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-70.883088529615634 -695.1950419207401"
#!   TOP_LEFT="-70.883088529615634 -695.1950419207401"
#!   BOTTOM_RIGHT="679.11691147038437 -745.1950419207401"
#!   BOUNDING_RECT="-70.883088529615634 -695.1950419207401 750 50"
#!   ORDER="500000000000877"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! <COMMENT
#!   IDENTIFIER="26"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;Removes all list attribute duplicates&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1011.7134707362966 -754.57063567667774"
#!   TOP_LEFT="1011.7134707362966 -754.57063567667774"
#!   BOTTOM_RIGHT="1492.980163994026 -753.57063567667774"
#!   BOUNDING_RECT="1011.7134707362966 -754.57063567667774 481.26669325772946 -1"
#!   ORDER="500000000000879"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="8"
#! />
#! <COMMENT
#!   IDENTIFIER="27"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;This section removes list duplicates from distribution formats.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-4716.6303401425157 -614.47854208335445"
#!   TOP_LEFT="-4716.6303401425157 -614.47854208335445"
#!   BOTTOM_RIGHT="-3966.6303401425157 -664.47854208335445"
#!   BOUNDING_RECT="-4716.6303401425157 -614.47854208335445 750 50"
#!   ORDER="500000000000877"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! <COMMENT
#!   IDENTIFIER="28"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:12pt;&quot;&gt;This section removes list duplicates from additional info URL&apos;s.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1945.7780404684149 502.12655906165594"
#!   TOP_LEFT="1945.7780404684149 502.12655906165594"
#!   BOTTOM_RIGHT="2695.7780404684149 452.12655906165594"
#!   BOUNDING_RECT="1945.7780404684149 502.12655906165594 750 50"
#!   ORDER="500000000000877"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.78431372549019607,0.19607843137254902"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! <BOOKMARK
#!   IDENTIFIER="29"
#!   NAME="Distribution Formatter"
#!   DESCRIPTION="&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="-4741.638128423524 1126.0597098714509"
#!   ORDER="500000000000806"
#!   BOTTOM_RIGHT="-2941.4358949656453 -1090.789073083484"
#!   BOUNDING_RECT="-4741.638128423524 1126.0597098714509 1800.2022334578785 2216.8487829549349"
#!   STICKY="true"
#!   COLOUR="0.71764705882352942,0.24705882352941178,0.29803921568627451"
#!   CONTENTS="16 7 5 6 27 17 "
#! >
#! </BOOKMARK>
#! <BOOKMARK
#!   IDENTIFIER="30"
#!   NAME="Projection Formatter"
#!   DESCRIPTION="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="-2459.5548864665943 1136.9117753535713"
#!   ORDER="500000000000810.13"
#!   BOTTOM_RIGHT="-659.35265300871583 -1126.5037159441988"
#!   BOUNDING_RECT="-2459.5548864665943 1136.9117753535713 1800.2022334578785 2263.4154912977701"
#!   STICKY="true"
#!   COLOUR="0.96470588235294119,0.14901960784313725,0.93725490196078431"
#!   CONTENTS="3 23 15 2 4 14 "
#! >
#! </BOOKMARK>
#! <BOOKMARK
#!   IDENTIFIER="31"
#!   NAME="Update Formatter"
#!   DESCRIPTION="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="-215.08849735826152 1133.3563659616639"
#!   ORDER="500000000000810.13"
#!   BOTTOM_RIGHT="1585.113736099617 -1130.0591253361063"
#!   BOUNDING_RECT="-215.08849735826152 1133.3563659616639 1800.2022334578785 2263.4154912977701"
#!   STICKY="true"
#!   COLOUR="0,1,1"
#!   CONTENTS="26 22 20 11 9 10 21 25 8 "
#! >
#! </BOOKMARK>
#! <BOOKMARK
#!   IDENTIFIER="32"
#!   NAME="New Bookmark"
#!   DESCRIPTION="&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="-4923.6645738676907 1296.8827340031221"
#!   ORDER="500000000000885"
#!   BOTTOM_RIGHT="2984.4048440484403 -1296.8932037562554"
#!   BOUNDING_RECT="-4923.6645738676907 1296.8827340031221 7908.069417916131 2593.7759377593775"
#!   STICKY="false"
#!   COLOUR="0.90196078431372551,0.62352941176470589,0.7686274509803922"
#!   CONTENTS=""
#! >
#! </BOOKMARK>
#! <BOOKMARK
#!   IDENTIFIER="33"
#!   NAME="More Info URL Formatter"
#!   DESCRIPTION="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="1892.8929892877909 1125.4575814068703"
#!   ORDER="500000000000810.13"
#!   BOTTOM_RIGHT="2759.4025940259403 -120.83348345948116"
#!   BOUNDING_RECT="1892.8929892877909 1125.4575814068703 866.50960473814939 1246.2910648663515"
#!   STICKY="true"
#!   COLOUR="1,1,0.49411764705882355"
#!   CONTENTS="28 12 "
#! >
#! </BOOKMARK>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="ListDuplicateRemover"
#!   VERSION="1"
#!   POSITION="-1789.3638832118377 -445.48460554004987"
#!   BOUNDING_RECT="-1789.3638832118377 -445.48460554004987 481.26669325772946 71"
#!   ORDER="500000000000807"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="projectionList{}.projection_name"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListDuplicateRemover_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="ListCopier"
#!   VERSION="1"
#!   POSITION="-1862.0341793320731 832.59294920603452"
#!   BOUNDING_RECT="-1862.0341793320731 832.59294920603452 -1 -1"
#!   ORDER="500000000000880"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="DEST_LIST" PARM_VALUE="projectionList"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="resources&lt;opencurly&gt;&lt;closecurly&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListCopier"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="4"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="-1862.0341793320731 162.19934050804704"
#!   BOUNDING_RECT="-1862.0341793320731 162.19934050804704 -1 -1"
#!   ORDER="500000000000881"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE="projectionList&lt;opencurly&gt;&lt;closecurly&gt;.data_collection_end_date projectionList&lt;opencurly&gt;&lt;closecurly&gt;.data_collection_start_date projectionList&lt;opencurly&gt;&lt;closecurly&gt;.format projectionList&lt;opencurly&gt;&lt;closecurly&gt;.id projectionList&lt;opencurly&gt;&lt;closecurly&gt;.name projectionList&lt;opencurly&gt;&lt;closecurly&gt;.name_fr projectionList&lt;opencurly&gt;&lt;closecurly&gt;.resource_update_cycle projectionList&lt;opencurly&gt;&lt;closecurly&gt;.url"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="ListCopier"
#!   VERSION="1"
#!   POSITION="-3928.5398725414097 761.91222718919425"
#!   BOUNDING_RECT="-3928.5398725414097 761.91222718919425 -1 -1"
#!   ORDER="500000000000829"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="DEST_LIST" PARM_VALUE="distributionList"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="resources&lt;opencurly&gt;&lt;closecurly&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListCopier_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="6"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="-3928.5398725414097 208.33526284812478"
#!   BOUNDING_RECT="-3928.5398725414097 208.33526284812478 -1 -1"
#!   ORDER="500000000000830"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE="distributionList&lt;opencurly&gt;&lt;closecurly&gt;.data_collection_end_date distributionList&lt;opencurly&gt;&lt;closecurly&gt;.data_collection_start_date distributionList&lt;opencurly&gt;&lt;closecurly&gt;.id distributionList&lt;opencurly&gt;&lt;closecurly&gt;.name distributionList&lt;opencurly&gt;&lt;closecurly&gt;.projection_name distributionList&lt;opencurly&gt;&lt;closecurly&gt;.resource_update_cycle distributionList&lt;opencurly&gt;&lt;closecurly&gt;.url"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="7"
#!   TYPE="ListDuplicateRemover"
#!   VERSION="1"
#!   POSITION="-3890.1501365404984 -447.92129971750137"
#!   BOUNDING_RECT="-3890.1501365404984 -447.92129971750137 -1 -1"
#!   ORDER="500000000000831"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="distributionList{}.format"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListDuplicateRemover_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="8"
#!   TYPE="ListDuplicateRemover"
#!   VERSION="1"
#!   POSITION="455.10250589649513 -449.04001493195801"
#!   BOUNDING_RECT="455.10250589649513 -449.04001493195801 481.26669325772946 71"
#!   ORDER="500000000000807"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="updateList{}.resource_update_cycle"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListDuplicateRemover_4"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="9"
#!   TYPE="ListCopier"
#!   VERSION="1"
#!   POSITION="382.4322097762597 550.34749087291266"
#!   BOUNDING_RECT="382.4322097762597 550.34749087291266 -1 -1"
#!   ORDER="500000000000880"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="DEST_LIST" PARM_VALUE="updateList"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="resources&lt;opencurly&gt;&lt;closecurly&gt;"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListCopier_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="10"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="382.4322097762597 162.11618806093111"
#!   BOUNDING_RECT="382.4322097762597 162.11618806093111 -1 -1"
#!   ORDER="500000000000881"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_3"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="11"
#!   TYPE="AttributeExposer"
#!   VERSION="1"
#!   POSITION="340.2769544364819 925.00401521593392"
#!   BOUNDING_RECT="340.2769544364819 925.00401521593392 -1 -1"
#!   ORDER="500000000000882"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="resources{}.resource_update_cycle_code,resources{}.resource_update_cycle_fr,resources{}.resource_update_cycle"/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeExposer"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="12"
#!   TYPE="ListDuplicateRemover"
#!   VERSION="1"
#!   POSITION="2046.8899840474055 888.20438469697694"
#!   BOUNDING_RECT="2046.8899840474055 888.20438469697694 -1 -1"
#!   ORDER="500000000000890"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18586"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_code" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle_fr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resources{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="updateList{}.resource_update_cycle" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="more_info{}.link"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListDuplicateRemover"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="34"
#!   NAME="OUTPUT"
#!   POSITION="3200.8959841074056 828.20438469697694"
#!   BOUNDING_RECT="3200.8959841074056 828.20438469697694 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="36"
#!   NAME="INPUT"
#!   POSITION="-5628.4260914035995 761.91222718919425"
#!   BOUNDING_RECT="-5628.4260914035995 761.91222718919425 -1 -1"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="37"
#!   SOURCE_NODE="36"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="13"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="4"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="6"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="17"
#!   SOURCE_NODE="6"
#!   TARGET_NODE="7"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="18"
#!   SOURCE_NODE="7"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="8"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="20"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="10"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="21"
#!   SOURCE_NODE="10"
#!   TARGET_NODE="8"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="22"
#!   SOURCE_NODE="11"
#!   TARGET_NODE="9"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="35"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="34"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>

#! START_HEADER
#! END_HEADER

DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO DUPLICATE_MANAGER_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(DUPLICATE_MANAGER_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(DUPLICATE_MANAGER_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_INPUT1571751273 Input Splitter"   INPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_INPUT"   OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_INPUT"
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_2    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_INPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_2_OUTPUT"         @CopyAttributes(ENCODED,distributionList{},resources<opencurly><closecurly>)
# -------------------------------------------------------------------------
INCLUDE [    set macroLine "MACRO $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP ";    foreach attr [split "distributionList<opencurly><closecurly>.data_collection_end_date distributionList<opencurly><closecurly>.data_collection_start_date distributionList<opencurly><closecurly>.id distributionList<opencurly><closecurly>.name distributionList<opencurly><closecurly>.projection_name distributionList<opencurly><closecurly>.resource_update_cycle distributionList<opencurly><closecurly>.url"] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_2    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_2_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"        @RemoveAttributes(fme_encoded,)        @RemoveAttributes(fme_pcre_match"$($(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP)")         }
# -------------------------------------------------------------------------
Tcl2 proc $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_3_removeDups {} {    set srcIndex 0;    regsub \"{}\" {distributionList{}.format} \"{$srcIndex}\"    listKeyAttrName;    regsub \"{}.*$\" {distributionList{}.format} \"\{\"          listBase;    regsub \"{}.*$\" {distributionList{}.format} \"\{*\"         listBasePattern;    regsub \"{(}.*)$\" {distributionList{}.format} {\1}          listSuffix;    regsub \"{}\" {distributionList{}.format} \"\\{\[0-9\]*\\}\" listPatternRegExp;    set listPatternRegExp \"^$listPatternRegExp\$\";    set listIndexRegExp   \"^$listBase\(\[0-9\]+\)\}.*\";    set attributeNames [FME_AttributeNames];    set COMMENT {      = Iterate over all attributes. For any that look like src_list{n}.something,      = keep a list in the associative array "listAttributesByIndex(n)". If they      = actually match the key on which we're comparing, store a "true" in the      = associative array "listKeyAttrNameExists()"    };    foreach attrname $attributeNames {       if [regsub $listIndexRegExp $attrname {\1} listIndex] {         lappend listAttributesByIndex($listIndex) $attrname;         if {$attrname ==  \"$listBase$listIndex$listSuffix\"} {           set listKeyAttrNameExists($attrname) true;         };       };    };    set destIndex 0;    set listElementsPattern {};    set haveMissingLast true;    if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };    while {[array size listKeyAttrNameExists] > 0 || $haveMissingLast } {        set keyVal [FME_GetAttribute $listKeyAttrName];        if {![info exists dups($keyVal)] && [info exists listAttributesByIndex($srcIndex)]} {            set listElementsPattern \"$listBase$srcIndex\}*\"; 				   set foundSibling 0;            set COMMENT {              = We already have the list of attributes associated with this index. Deal              = with each one of these.            };            foreach listAttrName $listAttributesByIndex($srcIndex)            {               set destAttrName [string replace $listAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set destAttrVal [FME_GetAttribute $listAttrName];               if {$destAttrVal == {} && [FME_IsAttributeNull $listAttrName]} {               	   set destAttrVal {FME_NULL_VALUE};               };               set holder($destAttrName) $destAttrVal;               if {$foundSibling == 0  } {                   set dups($keyVal) {};                   set foundSibling 1;               };            };            if {$foundSibling && $keyVal == {} && ![FME_AttributeExists $listKeyAttrName]}            {               set dups($keyVal) {};               set missingAttrName [string replace $listKeyAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set holder($missingAttrName) {FME_MISSING_VAL};            };            if {$foundSibling} {                incr destIndex;            };        };        if $haveNextKey {          unset listKeyAttrNameExists($listKeyAttrName);        };        incr srcIndex;        regsub \"{}\" {distributionList{}.format} \"{$srcIndex}\" listKeyAttrName;        if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };        if {[array size listKeyAttrNameExists] == 0} {            set COMMENT {              = Once we've exhausted all of the actual sort keys, keep looking for structured              = elements within the list that don't have an accompanying sort key.            };            set haveMissingLast [info exists listAttributesByIndex($srcIndex)];        };    };    foreach attrname $attributeNames { 		 if {[string match $listBasePattern $attrname]} { 		   FME_UnsetAttributes $attrname; 		 };    };    foreach newListAttrName [array names holder] {        if {$holder($newListAttrName) == {FME_NULL_VALUE}} {           FME_SetAttributeNull $newListAttrName        } elseif { $holder($newListAttrName) != {FME_MISSING_VAL} } {           FME_SetAttribute $newListAttrName $holder($newListAttrName);        };    }; };
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_3    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_3_OUTPUT"         @Tcl2("$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_3_removeDups")
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_3_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_OUTPUT"         @CopyAttributes(ENCODED,projectionList{},resources<opencurly><closecurly>)
# -------------------------------------------------------------------------
INCLUDE [    set macroLine "MACRO $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split "projectionList<opencurly><closecurly>.data_collection_end_date projectionList<opencurly><closecurly>.data_collection_start_date projectionList<opencurly><closecurly>.format projectionList<opencurly><closecurly>.id projectionList<opencurly><closecurly>.name projectionList<opencurly><closecurly>.name_fr projectionList<opencurly><closecurly>.resource_update_cycle projectionList<opencurly><closecurly>.url"] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,)        @RemoveAttributes(fme_pcre_match"$($(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")         }
# -------------------------------------------------------------------------
Tcl2 proc $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_2_removeDups {} {    set srcIndex 0;    regsub \"{}\" {projectionList{}.projection_name} \"{$srcIndex}\"    listKeyAttrName;    regsub \"{}.*$\" {projectionList{}.projection_name} \"\{\"          listBase;    regsub \"{}.*$\" {projectionList{}.projection_name} \"\{*\"         listBasePattern;    regsub \"{(}.*)$\" {projectionList{}.projection_name} {\1}          listSuffix;    regsub \"{}\" {projectionList{}.projection_name} \"\\{\[0-9\]*\\}\" listPatternRegExp;    set listPatternRegExp \"^$listPatternRegExp\$\";    set listIndexRegExp   \"^$listBase\(\[0-9\]+\)\}.*\";    set attributeNames [FME_AttributeNames];    set COMMENT {      = Iterate over all attributes. For any that look like src_list{n}.something,      = keep a list in the associative array "listAttributesByIndex(n)". If they      = actually match the key on which we're comparing, store a "true" in the      = associative array "listKeyAttrNameExists()"    };    foreach attrname $attributeNames {       if [regsub $listIndexRegExp $attrname {\1} listIndex] {         lappend listAttributesByIndex($listIndex) $attrname;         if {$attrname ==  \"$listBase$listIndex$listSuffix\"} {           set listKeyAttrNameExists($attrname) true;         };       };    };    set destIndex 0;    set listElementsPattern {};    set haveMissingLast true;    if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };    while {[array size listKeyAttrNameExists] > 0 || $haveMissingLast } {        set keyVal [FME_GetAttribute $listKeyAttrName];        if {![info exists dups($keyVal)] && [info exists listAttributesByIndex($srcIndex)]} {            set listElementsPattern \"$listBase$srcIndex\}*\"; 				   set foundSibling 0;            set COMMENT {              = We already have the list of attributes associated with this index. Deal              = with each one of these.            };            foreach listAttrName $listAttributesByIndex($srcIndex)            {               set destAttrName [string replace $listAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set destAttrVal [FME_GetAttribute $listAttrName];               if {$destAttrVal == {} && [FME_IsAttributeNull $listAttrName]} {               	   set destAttrVal {FME_NULL_VALUE};               };               set holder($destAttrName) $destAttrVal;               if {$foundSibling == 0  } {                   set dups($keyVal) {};                   set foundSibling 1;               };            };            if {$foundSibling && $keyVal == {} && ![FME_AttributeExists $listKeyAttrName]}            {               set dups($keyVal) {};               set missingAttrName [string replace $listKeyAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set holder($missingAttrName) {FME_MISSING_VAL};            };            if {$foundSibling} {                incr destIndex;            };        };        if $haveNextKey {          unset listKeyAttrNameExists($listKeyAttrName);        };        incr srcIndex;        regsub \"{}\" {projectionList{}.projection_name} \"{$srcIndex}\" listKeyAttrName;        if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };        if {[array size listKeyAttrNameExists] == 0} {            set COMMENT {              = Once we've exhausted all of the actual sort keys, keep looking for structured              = elements within the list that don't have an accompanying sort key.            };            set haveMissingLast [info exists listAttributesByIndex($srcIndex)];        };    };    foreach attrname $attributeNames { 		 if {[string match $listBasePattern $attrname]} { 		   FME_UnsetAttributes $attrname; 		 };    };    foreach newListAttrName [array names holder] {        if {$holder($newListAttrName) == {FME_NULL_VALUE}} {           FME_SetAttributeNull $newListAttrName        } elseif { $holder($newListAttrName) != {FME_MISSING_VAL} } {           FME_SetAttribute $newListAttrName $holder($newListAttrName);        };    }; };
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_2    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_2_OUTPUT"         @Tcl2("$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_2_removeDups")
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeExposer    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_2_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeExposer_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_3    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeExposer_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_3_OUTPUT"         @CopyAttributes(ENCODED,updateList{},resources<opencurly><closecurly>)
# -------------------------------------------------------------------------
INCLUDE [    set macroLine "MACRO $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_3_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF {*} TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_3    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListCopier_3_OUTPUT"    OUTPUT { FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_3_OUTPUT"        @RemoveAttributes(fme_encoded,)        @RemoveAttributes(fme_pcre_match"$($(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_3_LIST_EXP)")         }
# -------------------------------------------------------------------------
Tcl2 proc $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_4_removeDups {} {    set srcIndex 0;    regsub \"{}\" {updateList{}.resource_update_cycle} \"{$srcIndex}\"    listKeyAttrName;    regsub \"{}.*$\" {updateList{}.resource_update_cycle} \"\{\"          listBase;    regsub \"{}.*$\" {updateList{}.resource_update_cycle} \"\{*\"         listBasePattern;    regsub \"{(}.*)$\" {updateList{}.resource_update_cycle} {\1}          listSuffix;    regsub \"{}\" {updateList{}.resource_update_cycle} \"\\{\[0-9\]*\\}\" listPatternRegExp;    set listPatternRegExp \"^$listPatternRegExp\$\";    set listIndexRegExp   \"^$listBase\(\[0-9\]+\)\}.*\";    set attributeNames [FME_AttributeNames];    set COMMENT {      = Iterate over all attributes. For any that look like src_list{n}.something,      = keep a list in the associative array "listAttributesByIndex(n)". If they      = actually match the key on which we're comparing, store a "true" in the      = associative array "listKeyAttrNameExists()"    };    foreach attrname $attributeNames {       if [regsub $listIndexRegExp $attrname {\1} listIndex] {         lappend listAttributesByIndex($listIndex) $attrname;         if {$attrname ==  \"$listBase$listIndex$listSuffix\"} {           set listKeyAttrNameExists($attrname) true;         };       };    };    set destIndex 0;    set listElementsPattern {};    set haveMissingLast true;    if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };    while {[array size listKeyAttrNameExists] > 0 || $haveMissingLast } {        set keyVal [FME_GetAttribute $listKeyAttrName];        if {![info exists dups($keyVal)] && [info exists listAttributesByIndex($srcIndex)]} {            set listElementsPattern \"$listBase$srcIndex\}*\"; 				   set foundSibling 0;            set COMMENT {              = We already have the list of attributes associated with this index. Deal              = with each one of these.            };            foreach listAttrName $listAttributesByIndex($srcIndex)            {               set destAttrName [string replace $listAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set destAttrVal [FME_GetAttribute $listAttrName];               if {$destAttrVal == {} && [FME_IsAttributeNull $listAttrName]} {               	   set destAttrVal {FME_NULL_VALUE};               };               set holder($destAttrName) $destAttrVal;               if {$foundSibling == 0  } {                   set dups($keyVal) {};                   set foundSibling 1;               };            };            if {$foundSibling && $keyVal == {} && ![FME_AttributeExists $listKeyAttrName]}            {               set dups($keyVal) {};               set missingAttrName [string replace $listKeyAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set holder($missingAttrName) {FME_MISSING_VAL};            };            if {$foundSibling} {                incr destIndex;            };        };        if $haveNextKey {          unset listKeyAttrNameExists($listKeyAttrName);        };        incr srcIndex;        regsub \"{}\" {updateList{}.resource_update_cycle} \"{$srcIndex}\" listKeyAttrName;        if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };        if {[array size listKeyAttrNameExists] == 0} {            set COMMENT {              = Once we've exhausted all of the actual sort keys, keep looking for structured              = elements within the list that don't have an accompanying sort key.            };            set haveMissingLast [info exists listAttributesByIndex($srcIndex)];        };    };    foreach attrname $attributeNames { 		 if {[string match $listBasePattern $attrname]} { 		   FME_UnsetAttributes $attrname; 		 };    };    foreach newListAttrName [array names holder] {        if {$holder($newListAttrName) == {FME_NULL_VALUE}} {           FME_SetAttributeNull $newListAttrName        } elseif { $holder($newListAttrName) != {FME_MISSING_VAL} } {           FME_SetAttribute $newListAttrName $holder($newListAttrName);        };    }; };
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_4    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_AttributeRemover_3_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_4_OUTPUT"         @Tcl2("$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_4_removeDups")
# -------------------------------------------------------------------------
Tcl2 proc $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_removeDups {} {    set srcIndex 0;    regsub \"{}\" {more_info{}.link} \"{$srcIndex}\"    listKeyAttrName;    regsub \"{}.*$\" {more_info{}.link} \"\{\"          listBase;    regsub \"{}.*$\" {more_info{}.link} \"\{*\"         listBasePattern;    regsub \"{(}.*)$\" {more_info{}.link} {\1}          listSuffix;    regsub \"{}\" {more_info{}.link} \"\\{\[0-9\]*\\}\" listPatternRegExp;    set listPatternRegExp \"^$listPatternRegExp\$\";    set listIndexRegExp   \"^$listBase\(\[0-9\]+\)\}.*\";    set attributeNames [FME_AttributeNames];    set COMMENT {      = Iterate over all attributes. For any that look like src_list{n}.something,      = keep a list in the associative array "listAttributesByIndex(n)". If they      = actually match the key on which we're comparing, store a "true" in the      = associative array "listKeyAttrNameExists()"    };    foreach attrname $attributeNames {       if [regsub $listIndexRegExp $attrname {\1} listIndex] {         lappend listAttributesByIndex($listIndex) $attrname;         if {$attrname ==  \"$listBase$listIndex$listSuffix\"} {           set listKeyAttrNameExists($attrname) true;         };       };    };    set destIndex 0;    set listElementsPattern {};    set haveMissingLast true;    if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };    while {[array size listKeyAttrNameExists] > 0 || $haveMissingLast } {        set keyVal [FME_GetAttribute $listKeyAttrName];        if {![info exists dups($keyVal)] && [info exists listAttributesByIndex($srcIndex)]} {            set listElementsPattern \"$listBase$srcIndex\}*\"; 				   set foundSibling 0;            set COMMENT {              = We already have the list of attributes associated with this index. Deal              = with each one of these.            };            foreach listAttrName $listAttributesByIndex($srcIndex)            {               set destAttrName [string replace $listAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set destAttrVal [FME_GetAttribute $listAttrName];               if {$destAttrVal == {} && [FME_IsAttributeNull $listAttrName]} {               	   set destAttrVal {FME_NULL_VALUE};               };               set holder($destAttrName) $destAttrVal;               if {$foundSibling == 0  } {                   set dups($keyVal) {};                   set foundSibling 1;               };            };            if {$foundSibling && $keyVal == {} && ![FME_AttributeExists $listKeyAttrName]}            {               set dups($keyVal) {};               set missingAttrName [string replace $listKeyAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set holder($missingAttrName) {FME_MISSING_VAL};            };            if {$foundSibling} {                incr destIndex;            };        };        if $haveNextKey {          unset listKeyAttrNameExists($listKeyAttrName);        };        incr srcIndex;        regsub \"{}\" {more_info{}.link} \"{$srcIndex}\" listKeyAttrName;        if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };        if {[array size listKeyAttrNameExists] == 0} {            set COMMENT {              = Once we've exhausted all of the actual sort keys, keep looking for structured              = elements within the list that don't have an accompanying sort key.            };            set haveMissingLast [info exists listAttributesByIndex($srcIndex)];        };    };    foreach attrname $attributeNames { 		 if {[string match $listBasePattern $attrname]} { 		   FME_UnsetAttributes $attrname; 		 };    };    foreach newListAttrName [array names holder] {        if {$holder($newListAttrName) == {FME_NULL_VALUE}} {           FME_SetAttributeNull $newListAttrName        } elseif { $holder($newListAttrName) != {FME_MISSING_VAL} } {           FME_SetAttribute $newListAttrName $holder($newListAttrName);        };    }; };
FACTORY_DEF * TeeFactory    FACTORY_NAME $(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover    INPUT  FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_4_OUTPUT"    OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_OUTPUT"         @Tcl2("$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_removeDups")
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_OUTPUT1571751273 Output Collector"   INPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_ListDuplicateRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(DUPLICATE_MANAGER_WORKSPACE_NAME)_OUTPUT"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(DUPLICATE_MANAGER_WORKSPACE_NAME))}]
