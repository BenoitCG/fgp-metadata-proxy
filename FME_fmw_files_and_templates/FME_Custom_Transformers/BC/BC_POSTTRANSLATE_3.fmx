#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN BC_POSTTRANSLATE_3,1,,7378be37-9021-4dc2-8a95-de0869922341,"Linked by Default",No,NO_PARALLELISM,,No,18592,YES,No,27
# 
# TRANSFORMER_END
#!   ATTR_TYPE_ENCODING="SDF"
#!   BLOCKED_LOOPING="No"
#!   CATEGORY=""
#!   DESCRIPTION=""
#!   DOC_EXTENTS="1517.19 2347.87"
#!   DOC_TOP_LEFT="-920.123 -1173.89"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="18592"
#!   FME_DOCUMENT_GUID="7378be37-9021-4dc2-8a95-de0869922341"
#!   FME_DOCUMENT_PRIORGUID="4ebf8bcf-4301-4407-834f-7fa59462d634,6066c3af-046d-4b22-91e7-dfd5d016ec3d,12159273-5591-4046-ab40-adebaab2691d,413de358-08ed-42de-b390-048f8c57fba4"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_SERVER_SERVICES=""
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   FMX_INSERT_MODE="Linked by Default"
#!   HISTORY=""
#!   ITERATION_COUNT_ATTR=""
#!   LAST_SAVE_BUILD="FME(R) 2018.1.2.1 (20190319 - Build 18592 - WIN32)"
#!   LAST_SAVE_DATE="2019-07-26T08:53:21"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOOP_ITERATIONS=""
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="27"
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   TITLE="BC_POSTTRANSLATE_3"
#!   USAGE=""
#!   USE_MARKDOWN="NO"
#!   VIEW_POSITION="-3540.66 1625.02"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   XFORM_DEPRECATED="No"
#!   ZOOM_SCALE="100"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR CSW_URL_AWS_SELECT_BC CSW URL AWS:"
#!   DEFAULT_VALUE="http://ec2-35-182-113-175.ca-central-1.compute.amazonaws.com:80/csw"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LIST_ATTR SRC_LIST &quot;&quot; resource{}.format:"
#!   DEFAULT_VALUE="resource{}.format"
#!   IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! <BOOKMARK
#!   IDENTIFIER="9"
#!   NAME="Distribution Formatter"
#!   DESCRIPTION="&lt;html&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;"
#!   TOP_LEFT="-597.14316856758523 1173.9812114220767"
#!   ORDER="500000000000806"
#!   BOTTOM_RIGHT="597.0652020875641 -1173.8932546042524"
#!   BOUNDING_RECT="-597.14316856758523 1173.9812114220767 1194.2083706551493 2347.8744660263292"
#!   STICKY="true"
#!   COLOUR="0.89803921568627454,0.30980392156862746,0.37647058823529411"
#!   CONTENTS="5 16 14 12 8 13 4 3 6 2 15 "
#! >
#! </BOOKMARK>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="ListSorter"
#!   VERSION="4"
#!   POSITION="-301.74503781078238 -282.8043880062105"
#!   BOUNDING_RECT="-301.74503781078238 -282.8043880062105 -1 -1"
#!   ORDER="500000000000755"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18312"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resource{0}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{1}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{2}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{3}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{4}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{5}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{6}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{7}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{8}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{9}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ORDER" PARM_VALUE="Ascending"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="$(SRC_LIST)"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TYPE" PARM_VALUE="Alphabetic"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListSorter"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="AttributeRenamer"
#!   VERSION="4"
#!   POSITION="-342.12269131076027 -851.56007556308032"
#!   BOUNDING_RECT="-342.12269131076027 -851.56007556308032 -1 -1"
#!   ORDER="500000000000757"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18312"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="distribution_format_0" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="distribution_format_1" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="distribution_format_2" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="distribution_format_3" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="distribution_format_4" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="distribution_format_5" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{6}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{7}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{8}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{9}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="resource&lt;opencurly&gt;0&lt;closecurly&gt;.format distribution_format_0 RENAME_SET_DEFAULT  resource&lt;opencurly&gt;1&lt;closecurly&gt;.format distribution_format_1 RENAME_SET_DEFAULT  resource&lt;opencurly&gt;2&lt;closecurly&gt;.format distribution_format_2 RENAME_SET_DEFAULT  resource&lt;opencurly&gt;3&lt;closecurly&gt;.format distribution_format_3 RENAME_SET_DEFAULT  resource&lt;opencurly&gt;4&lt;closecurly&gt;.format distribution_format_4 RENAME_SET_DEFAULT  resource&lt;opencurly&gt;5&lt;closecurly&gt;.format distribution_format_5 RENAME_SET_DEFAULT "/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRenamer"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="4"
#!   TYPE="AttributeCopier"
#!   VERSION="5"
#!   POSITION="-342.12269131076027 671.23685400113027"
#!   BOUNDING_RECT="-342.12269131076027 671.23685400113027 -1 -1"
#!   ORDER="500000000000748"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18592"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="ATTRIBUTE_GRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ATTR_TABLE" PARM_VALUE="resource_format_0 resource&lt;opencurly&gt;0&lt;closecurly&gt;.format COPY  resource_format_1 resource&lt;opencurly&gt;1&lt;closecurly&gt;.format COPY  resource_format_2 resource&lt;opencurly&gt;2&lt;closecurly&gt;.format COPY  resource_format_3 resource&lt;opencurly&gt;3&lt;closecurly&gt;.format COPY  resource_format_4 resource&lt;opencurly&gt;4&lt;closecurly&gt;.format COPY  resource_format_5 resource&lt;opencurly&gt;5&lt;closecurly&gt;.format COPY  resource_format_6 resource&lt;opencurly&gt;6&lt;closecurly&gt;.format COPY  resource_format_7 resource&lt;opencurly&gt;7&lt;closecurly&gt;.format COPY  resource_format_8 resource&lt;opencurly&gt;8&lt;closecurly&gt;.format COPY  resource_format_9 resource&lt;opencurly&gt;9&lt;closecurly&gt;.format COPY "/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeCopier"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="5"
#!   TYPE="ListDuplicateRemover"
#!   VERSION="1"
#!   POSITION="-301.74503781078238 71.23085394113275"
#!   BOUNDING_RECT="-301.74503781078238 71.23085394113275 -1 -1"
#!   ORDER="500000000000752"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18592"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resource{0}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{1}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{2}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{3}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{4}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{5}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{6}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{7}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{8}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{9}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC_LIST" PARM_VALUE="resource{}.format"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ListDuplicateRemover"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="14"
#!   TYPE="AttributeExposer"
#!   VERSION="1"
#!   POSITION="-301.74503781078238 421.879218792188"
#!   BOUNDING_RECT="-301.74503781078238 421.879218792188 -1 -1"
#!   ORDER="500000000000807"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="18592"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="resource{0}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{1}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{2}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{3}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{4}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{5}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{6}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{7}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{8}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{9}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="resource{}.format" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="resource{0}.format,resource{1}.format,resource{2}.format,resource{3}.format,resource{4}.format,resource{5}.format,resource{6}.format,resource{7}.format,resource{8}.format,resource{9}.format,resource{}.format"/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeExposer"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="10"
#!   NAME="INPUT"
#!   POSITION="-920.12269131076027 652.73685400113027"
#!   BOUNDING_RECT="-920.12269131076027 652.73685400113027 -1 -1"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="12"
#!   NAME="OUTPUT"
#!   POSITION="211.87730868923973 -870.06007556308032"
#!   BOUNDING_RECT="211.87730868923973 -870.06007556308032 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="11"
#!   SOURCE_NODE="10"
#!   TARGET_NODE="4"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="6"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="13"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="14"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="8"
#!   SOURCE_NODE="5"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="14"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>

DEFAULT_MACRO $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_CSW_URL_AWS_SELECT_BC http://ec2-35-182-113-175.ca-central-1.compute.amazonaws.com:80/csw
DEFAULT_MACRO $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_SRC_LIST resource{}.format
#! START_HEADER
#! END_HEADER

DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO BC_POSTTRANSLATE_3_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(BC_POSTTRANSLATE_3_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_INPUT1564145601 Input Splitter"   INPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_INPUT"   OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_INPUT"
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    FACTORY_NAME $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeCopier    INPUT  FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_INPUT" 	 ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV 	 ATTR_ACTION { "resource_format_0" "resource<opencurly>0<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_1" "resource<opencurly>1<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_2" "resource<opencurly>2<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_3" "resource<opencurly>3<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_4" "resource<opencurly>4<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_5" "resource<opencurly>5<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_6" "resource<opencurly>6<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_7" "resource<opencurly>7<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_8" "resource<opencurly>8<closecurly>.format" "COPY" "" }      ATTR_ACTION { "resource_format_9" "resource<opencurly>9<closecurly>.format" "COPY" "" }    OUTPUT OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeCopier_OUTPUT"
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeExposer    INPUT  FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeCopier_OUTPUT"    OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeExposer_OUTPUT"
# -------------------------------------------------------------------------
Tcl2 proc $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListDuplicateRemover_removeDups {} {    set srcIndex 0;    regsub \"{}\" {resource{}.format} \"{$srcIndex}\"    listKeyAttrName;    regsub \"{}.*$\" {resource{}.format} \"\{\"          listBase;    regsub \"{}.*$\" {resource{}.format} \"\{*\"         listBasePattern;    regsub \"{(}.*)$\" {resource{}.format} {\1}          listSuffix;    regsub \"{}\" {resource{}.format} \"\\{\[0-9\]*\\}\" listPatternRegExp;    set listPatternRegExp \"^$listPatternRegExp\$\";    set listIndexRegExp   \"^$listBase\(\[0-9\]+\)\}.*\";    set attributeNames [FME_AttributeNames];    set COMMENT {      = Iterate over all attributes. For any that look like src_list{n}.something,      = keep a list in the associative array "listAttributesByIndex(n)". If they      = actually match the key on which we're comparing, store a "true" in the      = associative array "listKeyAttrNameExists()"    };    foreach attrname $attributeNames {       if [regsub $listIndexRegExp $attrname {\1} listIndex] {         lappend listAttributesByIndex($listIndex) $attrname;         if {$attrname ==  \"$listBase$listIndex$listSuffix\"} {           set listKeyAttrNameExists($attrname) true;         };       };    };    set destIndex 0;    set listElementsPattern {};    set haveMissingLast true;    if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };    while {[array size listKeyAttrNameExists] > 0 || $haveMissingLast } {        set keyVal [FME_GetAttribute $listKeyAttrName];        if {![info exists dups($keyVal)] && [info exists listAttributesByIndex($srcIndex)]} {            set listElementsPattern \"$listBase$srcIndex\}*\"; 				   set foundSibling 0;            set COMMENT {              = We already have the list of attributes associated with this index. Deal              = with each one of these.            };            foreach listAttrName $listAttributesByIndex($srcIndex)            {               set destAttrName [string replace $listAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set destAttrVal [FME_GetAttribute $listAttrName];               if {$destAttrVal == {} && [FME_IsAttributeNull $listAttrName]} {               	   set destAttrVal {FME_NULL_VALUE};               };               set holder($destAttrName) $destAttrVal;               if {$foundSibling == 0  } {                   set dups($keyVal) {};                   set foundSibling 1;               };            };            if {$foundSibling && $keyVal == {} && ![FME_AttributeExists $listKeyAttrName]}            {               set dups($keyVal) {};               set missingAttrName [string replace $listKeyAttrName 0                                 [expr [string length $listElementsPattern] - 3]                                 \"$listBase$destIndex\""];               set holder($missingAttrName) {FME_MISSING_VAL};            };            if {$foundSibling} {                incr destIndex;            };        };        if $haveNextKey {          unset listKeyAttrNameExists($listKeyAttrName);        };        incr srcIndex;        regsub \"{}\" {resource{}.format} \"{$srcIndex}\" listKeyAttrName;        if [catch { set haveNextKey $listKeyAttrNameExists($listKeyAttrName); }] { set haveNextKey false; };        if {[array size listKeyAttrNameExists] == 0} {            set COMMENT {              = Once we've exhausted all of the actual sort keys, keep looking for structured              = elements within the list that don't have an accompanying sort key.            };            set haveMissingLast [info exists listAttributesByIndex($srcIndex)];        };    };    foreach attrname $attributeNames { 		 if {[string match $listBasePattern $attrname]} { 		   FME_UnsetAttributes $attrname; 		 };    };    foreach newListAttrName [array names holder] {        if {$holder($newListAttrName) == {FME_NULL_VALUE}} {           FME_SetAttributeNull $newListAttrName        } elseif { $holder($newListAttrName) != {FME_MISSING_VAL} } {           FME_SetAttribute $newListAttrName $holder($newListAttrName);        };    }; };
FACTORY_DEF * TeeFactory    FACTORY_NAME $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListDuplicateRemover    INPUT  FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeExposer_OUTPUT"    OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListDuplicateRemover_OUTPUT"         @Tcl2("$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListDuplicateRemover_removeDups")
# -------------------------------------------------------------------------
Tcl2 set ListSorterRenamedAttrPrefix ________
Tcl2 proc $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListSorter_sort {} {    set COMMENT {    = NOTE: algorithm below does not support nested lists.    };    global ListSorterRenamedAttrPrefix;    regsub \"{}.*$\" {$($(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_SRC_LIST)} \"\" listBaseNoBrace;    regsub \"{}.*$\" {$($(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_SRC_LIST)} \"\{\" listBase;    regsub \"{}.*$\" {$($(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_SRC_LIST)} \"\" listName;    set listBaseLen [string length $listBase];    set listNameLen [expr $listBaseLen - 1];    set listValueExtension [string replace {$($(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_SRC_LIST)} 0 $listBaseLen {}];    set kMissingSidecarAttrSuffix {._________WAS_MISSING_________________};    set kCloseBrace \"\}\";    set kAnyOtherCharacters {*};    set COMMENT {    = To resolve PR 46315 (and friends), lets make a first pass to determine the full list of    = possible index numbers. Then we'll go through and make sure we have a KEY value for each    = of those.  We'll track what "keys" we added so that at the end we can REMOVE them so they stay MISSING.    };    set maxElementCount 0;    set attributeNames [FME_AttributeNames];    set listRegExp $listBaseNoBrace;    append listRegExp "\{(\[0-9\]+)\}";    set elementIndices {};    foreach attr $attributeNames {       if { [regexp $listRegExp $attr dummy subExpr] == 1 } {          lappend elementIndices $subExpr;          if { [expr $subExpr > $maxElementCount] } {             set maxElementCount $subExpr;          };       };    };    set curElement 0;    set COMMENT {    = Now that we have a list of the actual element numbers included in the list. Lets whip through and make sure    = we have an actual element for each of the "key" parts of the list we want to sort. If we don't, we'll    = make an element there with an empty value.  Note that we can't easily separate and sort NULL < missing < empty,    = but we'll live with that shortcoming in here as long as it is documented.    };    foreach curElement [lsort -integer -unique $elementIndices] {       set COMMENT {We found that there is at least some kind of element at this index in the list                    so we need to ensure there is a key element at this index};       set COMMENT {Minimum float is taken from std::numeric_limits<T>::lowest() cppreference web page.};       set indexKeyElementAttr $listBase$curElement$kCloseBrace$listValueExtension;       set indexKeyElementSidecarAttr $listBase$curElement$kCloseBrace$kMissingSidecarAttrSuffix;       if { ! [FME_AttributeExists $indexKeyElementAttr ] } {           set COMMENT {The key value attribute didn't exist. So lets put it on};           if { {} == {} } {              set COMMENT {doing string comparison so empty string};              FME_SetAttribute $indexKeyElementAttr {};           } else {              set COMMENT {doing numeric comparison so lowest float};              FME_SetAttribute $indexKeyElementAttr -3.40282e+38;           };           FME_SetAttribute $indexKeyElementSidecarAttr {FME_MISSING_VAL};       } elseif { {} != {} && [FME_IsAttributeNull $indexKeyElementAttr] } {           set COMMENT {attribute exists and we are doing numeric comparisons set null values to min float so they pass the lsort};           FME_SetAttribute $indexKeyElementSidecarAttr {FME_NULL_VALUE};           FME_SetAttribute $indexKeyElementAttr -3.40282e+38;       } elseif { {} != {} && [FME_GetAttribute $indexKeyElementAttr] == {} } {           set COMMENT {attribute exists and we are doing numeric comparisons set empty values to min float so they pass the lsort};           FME_SetAttribute $indexKeyElementSidecarAttr {};           FME_SetAttribute $indexKeyElementAttr -3.40282e+38;       };    };    set COMMENT {    =    For each attribute "listattr{<index>}.count" and all related attributes    =    "listattr{<index>}<extension>", create a list of the form    =       {$listattr{<index>}.count <index>}    =    and append the list to toSort, and keep a list of the extensions    =    for each index in the associative array listExtensions(<index>).    =    While iterating over the attributes, rename all such attributes to    =    "________listattr{<index>}<extension>" to    =    keep them out of the way, and to make them easier to clean up later.    =    Note that we're manually pulling out the index and extension, instead    =    of using regular expressions, as it is much more efficient    };    set toSort {};    foreach attr [FME_AttributeNames] {       set attrStart [string range $attr 0 $listNameLen];       if { $attrStart == $listBase } {          set braceEnd [string first \} $attr $listBaseLen];          set index [string range $attr $listBaseLen [expr $braceEnd - 1]];          set extension [string range $attr [expr $braceEnd + 1] end];          lappend listExtensions($index) $extension;          if { $extension == $listValueExtension } {             lappend toSort [list [FME_GetAttribute $attr] $index]          };          FME_RenameAttribute "$ListSorterRenamedAttrPrefix$attr" $attr;          set renamedAttrs($ListSorterRenamedAttrPrefix$attr) 1;       }    };    set COMMENT {    =    Sort the {$listattr{<index>} <index>} by index 0 (attr value)    };    set sortedList [lsort   -index 0 $toSort];    set destIndex 0;    set COMMENT {    =    For each list within sortedList, iterate over the list, renaming    =    "________listattr{<index>}<extension>" to    =    "listattr{<newIndex>}<extension>"    };    foreach pair $sortedList {       set elementNum [lindex $pair 1];       set newAttrBase "$listName\{$destIndex\}";       set oldAttrBase "$listName\{$elementNum\}";       foreach extension $listExtensions($elementNum) {          FME_RenameAttribute "$newAttrBase$extension" "$ListSorterRenamedAttrPrefix$oldAttrBase$extension";          unset renamedAttrs($ListSorterRenamedAttrPrefix$oldAttrBase$extension);       };       incr destIndex    };    set COMMENT {    =    If any attributes were renamed to their temporary names above, and they    =    did not contain the structure extension on which we were sorting, they    =    will still exist on the feature, and must be cleaned up.    };    set attrs [array names renamedAttrs];    if {[llength $attrs]} { eval FME_UnsetAttributes [array names renamedAttrs] };    set COMMENT {    =    = Lastly, go through and any of the MISSING, EMPTY, or NULL key values and set appropriately.  We'll have preserved their    = parallel list structure friends, but we need to restore the moved key to its original state: missing, blank or NULL    =    };    set curElement 0;    while { $curElement <= $maxElementCount } {        set indexKeyElementSidecarAttr $listBase$curElement$kCloseBrace$kMissingSidecarAttrSuffix;        if { [FME_AttributeExists $indexKeyElementSidecarAttr ] } {            set COMMENT {Get rid of the sidecar attribute and key attribute too};            set indexKeyElementAttr $listBase$curElement$kCloseBrace$listValueExtension;            set value [FME_GetAttribute $indexKeyElementSidecarAttr];            if {$value == {FME_NULL_VALUE}} {              FME_SetAttributeNull $indexKeyElementAttr;            } elseif { $value == {FME_MISSING_VAL} } {                FME_UnsetAttributes $indexKeyElementAttr;            } else {              FME_SetAttribute $indexKeyElementAttr {};            };            FME_UnsetAttributes $indexKeyElementSidecarAttr;        };        incr curElement;    }; }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListSorter    INPUT  FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListDuplicateRemover_OUTPUT"    OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListSorter_OUTPUT"         @Tcl2("$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListSorter_sort")
# -------------------------------------------------------------------------
FACTORY_DEF {*} AttrSetFactory    COMMAND_PARM_EVALUATION SINGLE_PASS    FACTORY_NAME $(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeRenamer    INPUT  FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_ListSorter_OUTPUT" 	 ATTRSET_CREATE_DIRECTIVES _PROPAGATE_MISSING_FDIV 	 ATTR_ACTION { "resource<opencurly>0<closecurly>.format" "distribution_format_0" "RENAME_SET_DEFAULT" "" }      ATTR_ACTION { "resource<opencurly>1<closecurly>.format" "distribution_format_1" "RENAME_SET_DEFAULT" "" }      ATTR_ACTION { "resource<opencurly>2<closecurly>.format" "distribution_format_2" "RENAME_SET_DEFAULT" "" }      ATTR_ACTION { "resource<opencurly>3<closecurly>.format" "distribution_format_3" "RENAME_SET_DEFAULT" "" }      ATTR_ACTION { "resource<opencurly>4<closecurly>.format" "distribution_format_4" "RENAME_SET_DEFAULT" "" }      ATTR_ACTION { "resource<opencurly>5<closecurly>.format" "distribution_format_5" "RENAME_SET_DEFAULT" "" }    OUTPUT OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeRenamer_OUTPUT"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_OUTPUT1564145601 Output Collector"   INPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_AttributeRenamer_OUTPUT"   OUTPUT FEATURE_TYPE "$(BC_POSTTRANSLATE_3_WORKSPACE_NAME)_OUTPUT"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(BC_POSTTRANSLATE_3_WORKSPACE_NAME))}]
